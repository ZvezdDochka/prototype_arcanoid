BALL_SPEED = 300
PLATFORM_ADD_SPEED = 100

function init(self)
	self.speed = BALL_SPEED
	local dir_x = -1
	self.direction = vmath.vector3(dir_x, -1, 0)
end

function fixed_update(self, dt)
	if self.direction then
		local speed = vmath.vector3(self.speed * self.direction.x, self.speed * self.direction.y, 0)
		local new_pos = go.get_position() + speed * dt -- вычисляем новую позицию шарика в зависимости от скорости, направления и временем отрисовки последнего кадра
		go.set_position(new_pos) -- двигаем шарик
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then -- обрабатываем столкновение шарика с поверхностями 
		if message.group == hash("out") then -- при столкновении с нижней границей поля
			print("GAME OVER")
		elseif message.group == hash("platform") or message.group == hash("top") or message.group == hash("left") or message.group == hash("right") then
			if message.group == hash("platform") then
				local speed = go.get("/platform#platform", "speed")
				
				if speed >= 500 and speed <= 1500 then self.speed = BALL_SPEED + PLATFORM_ADD_SPEED
				elseif speed > 1500 then self.speed = BALL_SPEED + PLATFORM_ADD_SPEED * 2
				elseif speed < 500 then self.speed = BALL_SPEED
				end
				
				print(speed, self.speed)
			end
			if message.other_id ~= self.prev_id then -- если до этого шарик касался другого объекта
				local normal = message.normal -- берем нормаль к поверхности
				--print(normal)

				if normal.x ~= 0 then
					if normal.x > 0 then
						self.direction.x = 1 -- отталкиваем шарик в противоположном направлении по x
					else 
						self.direction.x = -1
					end
					--self.direction.x = math.abs(self.direction.x) * normal.x -- отталкиваем шарик в противоположном направлении по x
				end

				if normal.y ~= 0 then
					if normal.y > 0 then
						self.direction.y = 1
					else
						self.direction.y = -1
					end
					--self.direction.y = math.abs(self.direction.y) * normal.y -- отталкиваем шарик в противоположном направлении по y
				end

				self.prev_id = message.other_id -- запоминаем объект, которого коснулся шарик
			end
		end
	end
end

function on_input(self, action_id, action)
	
end
