SCREEN_HIGH = sys.get_config_int("display.height") -- получаем высоту/ширину из настроек игры
SCREEN_WIDTH = sys.get_config_int("display.width")

local MAX_LEVEL = 2

local coins = 0
local loot = 0
local level = 1

function init(self)
	defos.set_fullscreen(true)
	defos.set_cursor_visible(true)
	
	msg.post("@render:", "use_fixed_fit_projection") -- задаем проекцию с сохранением пропорций (при изменении размеров окна)
	msg.post(".", "acquire_input_focus") -- получаем информацию ввода с устройств
end

function on_message(self, message_id, message, sender)
	if message_id == hash("load_level") then
		local lv_name = message.level_type
		msg.post("#level_"..lv_name, "load") -- загружаем уровень
		--defos.set_cursor_visible(false)
	end

	if message_id == hash("proxy_loaded") then -- узнаем что новый уровень загружен
		msg.post(sender, "init") -- инициализируем уровень
		msg.post(sender, "enable") -- включаем все объекты, начинаем отрисовку спрайтов
		msg.post("level:/level#level", "start_level", {level = level})
		msg.post("level:/level_interface#level_interface", "start_level", {coins = coins, loot = loot})
	end

	if message_id == hash("game_over") then -- если игра ококнчена
		local lv_name = message.level_type
		msg.post("#level_"..lv_name, "final") -- финализируем все скрипты
		msg.post("#level_"..lv_name, "unload") -- выгружаем уровень
	end

	if message_id == hash("win_level") then
		local lv_name = message.level_type
		coins = message.coins
		loot = message.loot
		msg.post("#level_"..lv_name, "final") -- финализируем все скрипты
		msg.post("#level_"..lv_name, "unload") -- выгружаем уровень
	end

	if message_id == hash("proxy_unloaded") then
		if level < MAX_LEVEL then
			level = level + 1
			msg.post("#", "load_level", {level_type = "classic"})
		end
	end
end
